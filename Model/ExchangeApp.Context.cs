//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Exchange_App.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class BEE_APPEntities : DbContext
    {
        public BEE_APPEntities()
            : base("name=BEE_APPEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Category> Categories { get; set; }
        public virtual DbSet<Image> Images { get; set; }
        public virtual DbSet<OrderDetail> OrderDetails { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Role> Roles { get; set; }
        public virtual DbSet<User_Order> User_Order { get; set; }
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<WishItem> WishItems { get; set; }
    
        [DbFunction("BEE_APPEntities", "FindProductByKeyWord")]
        public virtual IQueryable<Product> FindProductByKeyWord(string keyword)
        {
            var keywordParameter = keyword != null ?
                new ObjectParameter("Keyword", keyword) :
                new ObjectParameter("Keyword", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Product>("[BEE_APPEntities].[FindProductByKeyWord](@Keyword)", keywordParameter);
        }
    
        [DbFunction("BEE_APPEntities", "GetProductByCategory")]
        public virtual IQueryable<Product> GetProductByCategory(Nullable<int> catID)
        {
            var catIDParameter = catID.HasValue ?
                new ObjectParameter("CatID", catID) :
                new ObjectParameter("CatID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Product>("[BEE_APPEntities].[GetProductByCategory](@CatID)", catIDParameter);
        }
    
        [DbFunction("BEE_APPEntities", "GetProductByUser")]
        public virtual IQueryable<Product> GetProductByUser(Nullable<int> userID)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<Product>("[BEE_APPEntities].[GetProductByUser](@UserID)", userIDParameter);
        }
    
        [DbFunction("BEE_APPEntities", "LoginAccount")]
        public virtual IQueryable<User> LoginAccount(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("Password", password) :
                new ObjectParameter("Password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.CreateQuery<User>("[BEE_APPEntities].[LoginAccount](@Username, @Password)", usernameParameter, passwordParameter);
        }
    }
}
